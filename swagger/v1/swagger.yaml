---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/admin/jobs":
    get:
      summary: Lists all jobs for the company
      tags:
      - Admin Jobs
      security:
      - bearer_auth: []
      responses:
        '200':
          description: Jobs retrieved successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/jobs_response"
        '401':
          description: Not authenticated
        '403':
          description: Not authorized (not an admin)
    post:
      summary: Creates a new job
      tags:
      - Admin Jobs
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '201':
          description: Job created successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/job_response"
        '401':
          description: Not authenticated
        '403':
          description: Not authorized (not an admin)
        '422':
          description: Invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                job:
                  type: object
                  properties:
                    title:
                      type: string
                      example: Software Engineer
                    hourly_salary:
                      type: number
                      format: float
                      example: 35.5
                    language_codes:
                      type: array
                      items:
                        type: string
                      example:
                      - en
                  required:
                  - title
                  - hourly_salary
              required:
              - job
  "/api/v1/admin/jobs/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Retrieves a specific job
      tags:
      - Admin Jobs
      security:
      - bearer_auth: []
      responses:
        '200':
          description: Job found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/job_response"
        '401':
          description: Not authenticated
        '403':
          description: Not authorized (not an admin)
        '404':
          description: Job not found
  "/api/v1/login":
    post:
      summary: Authenticates user and returns JWT token
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: user authenticated
        '401':
          description: invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/api/v1/refresh":
    post:
      summary: Refreshes JWT token
      tags:
      - Authentication
      security:
      - bearer_auth: []
      parameters:
      - name: Authorization
        in: header
        description: Bearer token from login
        required: true
        schema:
          type: string
      responses:
        '200':
          description: token refreshed
        '401':
          description: invalid token
  "/api/v1/jobs":
    get:
      summary: Lists all jobs
      tags:
      - Jobs
      responses:
        '200':
          description: jobs found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/jobs_response"
  "/api/v1/jobs/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Retrieves a specific job
      tags:
      - Jobs
      responses:
        '200':
          description: job found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/job_response"
        '404':
          description: job not found
  "/api/v1/languages":
    get:
      summary: Lists all languages
      tags:
      - Languages
      responses:
        '200':
          description: languages found
          content:
            application/json:
              schema:
                type: object
                properties:
                  languages:
                    type: array
                    items:
                      "$ref": "#/components/schemas/language"
                  meta:
                    type: object
                    properties:
                      total_count:
                        type: integer
                required:
                - languages
  "/api/v1/signup":
    post:
      summary: Creates a user
      tags:
      - Registration
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: user@example.com
                    password:
                      type: string
                      example: password123
                    password_confirmation:
                      type: string
                      example: password123
                  required:
                  - email
                  - password
                  - password_confirmation
              required:
              - user
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
components:
  schemas:
    job:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        hourly_salary:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        company_id:
          type: integer
        creator_id:
          type: integer
      required:
      - id
      - title
      - hourly_salary
    language:
      type: object
      properties:
        name:
          type: string
        code:
          type: string
      required:
      - name
      - code
    jobs_response:
      type: object
      properties:
        jobs:
          type: array
          items:
            "$ref": "#/components/schemas/job_with_languages"
        meta:
          type: object
          properties:
            total_count:
              type: integer
      required:
      - jobs
      - meta
    job_response:
      type: object
      properties:
        job:
          "$ref": "#/components/schemas/job"
        spoken_languages:
          type: array
          items:
            "$ref": "#/components/schemas/language"
      required:
      - job
      - spoken_languages
    error:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
      required:
      - errors
    job_with_languages:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        hourly_salary:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        company_id:
          type: integer
        creator_id:
          type: integer
        spoken_languages:
          type: array
          items:
            "$ref": "#/components/schemas/language"
      required:
      - id
      - title
      - hourly_salary
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
